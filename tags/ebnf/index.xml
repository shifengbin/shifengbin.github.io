<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>EBNF on Blog Zone</title>
    <link>https://shifengbin.github.io/tags/ebnf/</link>
    <description>Recent content in EBNF on Blog Zone</description>
    <image>
      <title>Blog Zone</title>
      <url>https://shifengbin.github.io/images/cover.jpg</url>
      <link>https://shifengbin.github.io/images/cover.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 05 Jul 2022 15:31:12 +0800</lastBuildDate><atom:link href="https://shifengbin.github.io/tags/ebnf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EBNF</title>
      <link>https://shifengbin.github.io/posts/compiler/ebnf/</link>
      <pubDate>Tue, 05 Jul 2022 15:31:12 +0800</pubDate>
      
      <guid>https://shifengbin.github.io/posts/compiler/ebnf/</guid>
      <description>&lt;h1 id=&#34;ebnf&#34;&gt;EBNF&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;扩展巴科斯-瑙尔范式(EBNF, Extended Backus–Naur Form)&lt;/strong&gt; 是表达作为描述计算机编程语言&lt;strong&gt;形式语言(是用精确的数学或机器可处理的公式定义的语言)&lt;/strong&gt; 的正规方式的&lt;strong&gt;上下文无关文法&lt;/strong&gt; 的元语法(metalanguage)符号表示法。它是&lt;strong&gt;巴科斯范式(BNF)&lt;/strong&gt; 元语法符号表示法的一种扩展。&lt;/p&gt;
&lt;p&gt;简单的理解就是用来描述语言词法和语法规则的语言&lt;/p&gt;
&lt;h2 id=&#34;isoiec-14977标准&#34;&gt;ISO/IEC 14977标准&lt;/h2&gt;
&lt;h3 id=&#34;基本形式&#34;&gt;基本形式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;LEFT=RIGHT&lt;/code&gt; 意思为LEFT可由RIGHT推导而来，LEFT为非终结符，RIGHT可以为非终结符也可以为终结符；
&lt;strong&gt;非终结符&lt;/strong&gt; 简单的理解就是可以继续推导的符号
&lt;strong&gt;终结符&lt;/strong&gt; 不可被推导的符号&lt;/p&gt;
&lt;h3 id=&#34;符号&#34;&gt;符号&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;含义&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;=&lt;/td&gt;
          &lt;td&gt;定义&lt;/td&gt;
          &lt;td&gt;CharA=&amp;ldquo;a&amp;rdquo;; 代表CharA由字母a推导而来&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;,&lt;/td&gt;
          &lt;td&gt;连接符&lt;/td&gt;
          &lt;td&gt;a,b,c 代表abc是挨着的&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;;&lt;/td&gt;
          &lt;td&gt;结束符&lt;/td&gt;
          &lt;td&gt;CharA=&amp;ldquo;a&amp;rdquo;; 代表 CharA这条语句定义结束&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;|&lt;/td&gt;
          &lt;td&gt;或者&lt;/td&gt;
          &lt;td&gt;digit = &amp;ldquo;0&amp;rdquo; | &amp;ldquo;1&amp;rdquo; | &amp;ldquo;2&amp;rdquo; | &amp;ldquo;3&amp;rdquo; | &amp;ldquo;4&amp;rdquo; | &amp;ldquo;5&amp;rdquo; | &amp;ldquo;6&amp;rdquo; | &amp;ldquo;7&amp;rdquo; | &amp;ldquo;8&amp;rdquo; | &amp;ldquo;9&amp;rdquo;;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[&amp;hellip;]&lt;/td&gt;
          &lt;td&gt;可选，出现0次或1次&lt;/td&gt;
          &lt;td&gt;number = [&amp;quot;-&amp;quot;|&amp;quot;+&amp;quot;],digit  可匹配 1 -1 +1 &amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;{&amp;hellip;}&lt;/td&gt;
          &lt;td&gt;重复，出现&amp;gt;=0次&lt;/td&gt;
          &lt;td&gt;number = [&amp;quot;-&amp;quot;|&amp;quot;+&amp;quot;],digit,{digit}  可匹配 1 -1 +1 11  &amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;(&amp;hellip;)&lt;/td&gt;
          &lt;td&gt;分组&lt;/td&gt;
          &lt;td&gt;number = （&amp;quot;-&amp;quot;|&amp;quot;+&amp;quot;）,digit  符号必须添加，可匹配 -1 +1 &amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ldquo;&amp;hellip;&amp;ldquo;或者&amp;rsquo;&amp;hellip;&#39;&lt;/td&gt;
          &lt;td&gt;终结符,单引号主要是一些特殊情况，比如双引号&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;a&amp;quot;或者&amp;rsquo;a&amp;rsquo; 由单或双引号引起来的部分是终结符，就是代表字母a，不可继续推导&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;(* &amp;hellip; *)&lt;/td&gt;
          &lt;td&gt;注释&lt;/td&gt;
          &lt;td&gt;(*我是注释*) 注释不参与定义&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;?&amp;hellip;?&lt;/td&gt;
          &lt;td&gt;表示其中的内容具有特殊含义，对该含义的定义不在 EBNF 标准之内，有使用者来决定&lt;/td&gt;
          &lt;td&gt;space = ? US-ASCII character 32 ?;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;排除(将右边的内容从左边进行排除)&lt;/td&gt;
          &lt;td&gt;string= allVistableChar - &#39;&lt;strong&gt;&amp;rdquo;&lt;/strong&gt;&amp;rsquo; 表示在allVistableChar里排除&amp;quot;字符&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;示例&#34;&gt;示例&lt;/h3&gt;
&lt;p&gt;只允许赋值的简单编程语言可以用 EBNF&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
